<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.university.dao.UniversityDao">

	<select id="get" resultType="com.bootdo.university.domain.UniversityDO">
		select `id`,`university_name`,`university_address` from university where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.university.domain.UniversityDO">
		select `id`,`university_name`,`university_address` from university
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="universityName != null and universityName != ''"> and university_name = #{universityName} </if>
		  		  <if test="universityAddress != null and universityAddress != ''"> and university_address = #{universityAddress} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from university
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="universityName != null and universityName != ''"> and university_name = #{universityName} </if>
		  		  <if test="universityAddress != null and universityAddress != ''"> and university_address = #{universityAddress} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.university.domain.UniversityDO" useGeneratedKeys="true" keyProperty="id">
		insert into university
		(
			`university_name`, 
			`university_address`
		)
		values
		(
			#{universityName}, 
			#{universityAddress}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.university.domain.UniversityDO">
		update university 
		<set>
			<if test="universityName != null">`university_name` = #{universityName}, </if>
			<if test="universityAddress != null">`university_address` = #{universityAddress}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from university where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from university where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>